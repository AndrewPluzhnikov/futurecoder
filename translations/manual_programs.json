{
    "pages.GettingElementsAtPosition.steps.index_error.program": {
        "en": [
            "words[4]"
        ],
        "es": [
            "palabras[4]"
        ],
        "fr": [
            "mots[4]"
        ],
        "ta": [
            "\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[4]"
        ]
    },
    "pages.GettingElementsAtPosition.steps.introducing_len_and_range.program": {
        "en": [
            "words = ['This', 'is', 'a', 'list']",
            "indices = [0, 1, 2, 3]",
            "",
            "for index in indices:",
            "    print(index)",
            "    print(words[index])"
        ],
        "es": [
            "palabras = ['Esto', 'es', 'una', 'lista']",
            "indices = [0, 1, 2, 3]",
            "",
            "for indice in indices:",
            "    print(indice)",
            "    print(palabras[indice])"
        ],
        "fr": [
            "mots = ['Ceci', 'est', 'une', 'liste']",
            "indices = [0, 1, 2, 3]",
            "",
            "for i in indices:",
            "    print(i)",
            "    print(mots[i])"
        ],
        "ta": [
            "\u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0bcd = ['\u0b87\u0ba4\u0bc1', '\u0b87\u0bb8\u0bcd', '\u0b8f', '\u0baa\u0b9f\u0bcd\u0b9f\u0bbf\u0baf\u0bb2\u0bcd'] \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1\u0b95\u0bb3\u0bcd = [0, 1, 2, 3] \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bcd\u0b9f\u0bbf\u0bb1\u0bcd\u0b95\u0bc1: \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[\u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1])"
        ]
    },
    "pages.GettingElementsAtPosition.steps.introducing_subscripting.program": {
        "en": [
            "words = ['This', 'is', 'a', 'list']",
            "",
            "print(words[0])",
            "print(words[1])",
            "print(words[2])",
            "print(words[3])"
        ],
        "es": [
            "palabras = ['Esto', 'es', 'una', 'lista']",
            "",
            "print(palabras[0])",
            "print(palabras[1])",
            "print(palabras[2])",
            "print(palabras[3])"
        ],
        "fr": [
            "mots = ['Ceci', 'est', 'une', 'liste']",
            "",
            "print(mots[0])",
            "print(mots[1])",
            "print(mots[2])",
            "print(mots[3])"
        ],
        "ta": [
            "\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd = ['\u0b87\u0ba4\u0bc1', '\u0b87\u0bb8\u0bcd', '\u0b8f', '\u0bb2\u0bbf\u0bb8\u0bcd\u0b9f\u0bcd'] \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[0]) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[1]) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[2]) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[3])"
        ]
    },
    "pages.GettingElementsAtPosition.steps.range_len.program": {
        "en": [
            "words = ['This', 'is', 'a', 'list']",
            "indices = range(4)",
            "",
            "for index in indices:",
            "    print(index)",
            "    print(words[index])"
        ],
        "es": [
            "palabras = ['Esto', 'es', 'una', 'lista']",
            "",
            "for indice in range(len(palabras)):",
            "    print(indice)",
            "    print(palabras[indice])"
        ],
        "fr": [
            "mots = ['Ceci', 'est', 'une', 'liste']",
            "indices = range(4)",
            "",
            "for i in indices:",
            "    print(i)",
            "    print(mots[i])"
        ],
        "ta": [
            "\u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0bcd = ['\u0b87\u0ba4\u0bc1', '\u0b87\u0bb8\u0bcd', '\u0b8f', '\u0baa\u0b9f\u0bcd\u0b9f\u0bbf\u0baf\u0bb2\u0bcd'] \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1\u0b95\u0bb3\u0bcd = \u0bb5\u0bb0\u0bae\u0bcd\u0baa\u0bc1(4) \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1\u0b95\u0bb3\u0bbf\u0bb2\u0bcd \u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bcd\u0b9f\u0bc1: \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bcd\u0b9f\u0bc1) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd[\u0b95\u0bc1\u0bb1\u0bbf\u0baf\u0bc0\u0b9f\u0bc1])"
        ]
    },
    "pages.GettingElementsAtPosition.steps.using_len_first_time.program": {
        "en": [
            "words = ['This', 'is', 'a', 'list']",
            "print(len(words))"
        ],
        "es": [
            "palabras = ['Esto', 'es', 'una', 'lista']",
            "print(len(palabras))"
        ],
        "fr": [
            "mots = ['Ceci', 'est', 'une', 'liste']",
            "print(len(mots))"
        ],
        "ta": [
            "\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bcd = ['\u0b87\u0ba4\u0bc1', '\u0b87\u0bb8\u0bcd', '\u0b8f', '\u0bb2\u0bbf\u0bb8\u0bcd\u0b9f\u0bcd'] \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb2\u0bc6\u0ba9\u0bcd(\u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0bcd))"
        ]
    },
    "pages.Indentation.steps.mismatched_indentations.program": {
        "en": [
            "for character in name:",
            "    print(character)",
            "  print('---')"
        ],
        "es": [
            "for caracter in nombre:",
            "    print(caracter)",
            "  print('---')"
        ],
        "fr": [
            "for caractere in nom:",
            "    print(caractere)",
            "  print('---')"
        ],
        "ta": [
            "\u0baa\u0bc6\u0baf\u0bb0\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0b8e\u0bb4\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1\u0b95\u0bcd\u0b95\u0bc1: \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b8e\u0bb4\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1) \u0b85\u0b9a\u0bcd\u0b9a\u0bc1('---')"
        ]
    },
    "pages.Indentation.steps.missing_indentation.program": {
        "en": [
            "for character in name:",
            "print(character)"
        ],
        "es": [
            "for caracter in nombre:",
            "print(caracter)"
        ],
        "fr": [
            "for caractere in nom:",
            "print(caractere)"
        ],
        "ta": [
            "\u0baa\u0bc6\u0baf\u0bb0\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0b8e\u0bb4\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1\u0b95\u0bcd\u0b95\u0bc1: \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b8e\u0bb4\u0bc1\u0ba4\u0bcd\u0ba4\u0bc1)"
        ]
    },
    "pages.IntroducingLists.steps.first_list.program": {
        "en": [
            "words = ['This', 'is', 'a', 'list']",
            "",
            "for word in words:",
            "    print(word)"
        ],
        "es": [
            "palabras = ['Esto', 'es', 'una', 'lista']",
            "",
            "for palabra in palabras:",
            "    print(palabra)"
        ],
        "fr": [
            "mots = ['Ceci', 'est', 'une', 'liste']",
            "",
            "for mot in mots:",
            "    print(mot)"
        ],
        "ta": [
            "\u0b9a\u0bca\u0bb1\u0bcd\u0b95\u0bb3\u0bcd = ['\u0b87\u0ba4\u0bc1', '\u0b87\u0bb8\u0bcd', '\u0b8f', '\u0bb2\u0bbf\u0bb8\u0bcd\u0b9f\u0bcd'] \u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bb3\u0bbf\u0bb2\u0bcd \u0b89\u0bb3\u0bcd\u0bb3 \u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8\u0b95\u0bcd\u0b95\u0bc1: \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0bb5\u0bbe\u0bb0\u0bcd\u0ba4\u0bcd\u0ba4\u0bc8)"
        ]
    },
    "pages.IntroducingNestedLists.steps.first_nested_list_example.program": {
        "en": [
            "strings = [['hello', 'there'], ['how', 'are', 'you']]",
            "print(strings[1][0])"
        ],
        "es": [
            "cadenas = [['hola', 'todos'], ['como', 'estas', 'tu']]",
            "print(cadenas[1][0])"
        ],
        "fr": [
            "chaines = [['hello', 'there'], ['comment', 'allez', 'vous']]",
            "print(chaines[1][0])"
        ],
        "ta": [
            "\u0b9a\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bcd = [['\u0bb9\u0bb2\u0bcb', '\u0b85\u0b99\u0bcd\u0b95\u0bc7'], ['\u0b8e\u0baa\u0bcd\u0baa\u0b9f\u0bbf', '\u0b86\u0bb0\u0bcd', '\u0baf\u0bc2']] \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b9a\u0bb0\u0b99\u0bcd\u0b95\u0bb3\u0bcd[1][0])"
        ]
    },
    "pages.MultiLineExpressions.steps.invalid_multiline.program": {
        "br": [
            "se_amigo = nome == \"Alice\" or",
            "              name == \"Bob\""
        ],
        "en": [
            "is_friend = name == \"Alice\" or",
            "            name == \"Bob\""
        ],
        "es": [
            "es_amigo = nombre == \"Alicia\" or",
            "         nombre == \"Bob\""
        ],
        "fr": [
            "est_ami = nom == \"Alice\" or",
            "                 nom == \"Bob\""
        ],
        "ta": [
            "is_friend = \u0baa\u0bc6\u0baf\u0bb0\u0bcd == \"\u0b86\u0bb2\u0bbf\u0bb8\u0bcd\" \u0b85\u0bb2\u0bcd\u0bb2\u0ba4\u0bc1 \u0baa\u0bc6\u0baf\u0bb0\u0bcd == \"\u0baa\u0bbe\u0baa\u0bcd\""
        ]
    },
    "pages.NewlinesAndFormatBoard.steps.invalid_multi_line_string.program": {
        "br": [
            "assert_equal(",
            "    format_borda([",
            "        ['X', 'O', 'X'],",
            "        ['', 'O', 'O'],",
            "        [' ', 'X', ' ']",
            "     ]),",
            "     \"XOX",
            "       OO",
            "       X \"",
            ")"
        ],
        "en": [
            "assert_equal(",
            "    format_board([",
            "        ['X', 'O', 'X'],",
            "        [' ', 'O', 'O'],",
            "        [' ', 'X', ' ']",
            "    ]),",
            "    \"XOX",
            "      OO",
            "      X \"",
            ")"
        ],
        "es": [
            "assert_equal(",
            "    tablero_formateado([",
            "        ['X', 'O', 'X'],",
            "        [' ', 'O', 'O'],",
            "        [' ', 'X', ' ']",
            "    ]),",
            "    \"XOX",
            "      OO",
            "      X \"",
            ")"
        ],
        "fr": [
            "assert_equal(",
            "    representation([",
            "        ['X', 'O', 'X'],",
            "        [' ', 'O', 'O'],",
            "        [' ', 'X', ' ']",
            "    ]),",
            "    \"XOX",
            "      OO",
            "      X \"",
            ")"
        ],
        "ta": [
            "assert_equal( format_board([ ['X', 'O', 'X'], [' ', 'O', 'O'], [' ', 'X', ' '] ]), \"XOX OO X \")"
        ]
    },
    "pages.NewlinesAndFormatBoard.steps.multi_line_strings_triple_quotes.program": {
        "en": [
            "string = \"\"\"First line",
            "Second line\"\"\"",
            "print(string)"
        ],
        "es": [
            "cadena = \"\"\"Primera l\u00ednea",
            "Segunda l\u00ednea\"\"\"",
            "print(cadena)"
        ],
        "fr": [
            "chaine = \"\"\"Premi\u00e8re ligne",
            "Deuxi\u00e8me ligne \"\"\"",
            "print(chaine)"
        ],
        "ta": [
            "\u0b9a\u0bb0\u0bae\u0bcd = \"\"\"\u0bae\u0bc1\u0ba4\u0bb2\u0bcd \u0bb5\u0bb0\u0bbf \u0b87\u0bb0\u0ba3\u0bcd\u0b9f\u0bbe\u0bb5\u0ba4\u0bc1 \u0bb5\u0bb0\u0bbf\"\"\" \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(\u0b9a\u0bb0\u0bae\u0bcd)"
        ]
    },
    "pages.SingleAndDoubleQuotesInStrings.steps.single_quotes_apostrophe.program": {
        "br": [
            "print('Jantar da Alice')"
        ],
        "en": [
            "print('Alice's Diner')"
        ],
        "es": [
            "print('Ese es el perro'e Juan')"
        ],
        "fr": [
            "print('Alice s'en va diner')"
        ],
        "ta": [
            "\u0b85\u0b9a\u0bcd\u0b9a\u0bc1 ('\u0b86\u0bb2\u0bbf\u0bb8\u0bcd \u0b9f\u0bbf\u0ba9\u0bcd\u0ba9\u0bb0\u0bcd')"
        ]
    },
    "pages.StringMethodsUnderstandingMutation.steps.string_count_index.program": {
        "br": [
            "aspas = 'alimente o cachorro e o gato'",
            "print(aspas.contar('o))",
            "print(aspas.indice('o'))"
        ],
        "en": [
            "string = 'feed the dog and the cat'",
            "print(string.count('the'))",
            "print(string.index('the'))"
        ],
        "es": [
            "string = 'alimentar al perro y al gato'",
            "print(string.count('al'))",
            "print(string.index('al'))"
        ],
        "fr": [
            "chaine = 'fait tes devoirs et apprend tes le\u00e7ons'",
            "print(chaine.count('tes'))",
            "print(chaine.index('tes'))"
        ],
        "ta": [
            "\u0b9a\u0bb0\u0bae\u0bcd = '\u0ba8\u0bbe\u0baf\u0bcd\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0ba9\u0bc8\u0b95\u0bcd\u0b95\u0bc1\u0bae\u0bcd \u0b89\u0ba3\u0bb5\u0bb3\u0bbf\u0b95\u0bcd\u0b95\u0bb5\u0bc1\u0bae\u0bcd' \u0b85\u0b9a\u0bcd\u0b9a\u0bc1(string.count('the')) \u0baa\u0bbf\u0bb0\u0bbf\u0ba3\u0bcd\u0b9f\u0bcd(string.index('the'))"
        ]
    },
    "pages.StringMethodsUnderstandingMutation.steps.string_in_step.program": {
        "br": [
            "print('O' in 'alimente o cachorro e o gato')"
        ],
        "en": [
            "print('the' in 'feed the dog and the cat')"
        ],
        "es": [
            "print('al' in 'alimentar al perro y al gato')"
        ],
        "fr": [
            "print('tes' in 'fait tes devoirs et apprend tes le\u00e7ons')"
        ],
        "ta": [
            "\u0b85\u0b9a\u0bcd\u0b9a\u0bc1 ('\u0ba8\u0bbe\u0baf\u0bc1\u0bae\u0bcd \u0baa\u0bc2\u0ba9\u0bc8\u0baf\u0bc1\u0bae\u0bcd' \u0b8e\u0ba9\u0bcd\u0baa\u0ba4\u0bbf\u0bb2\u0bcd 'the')"
        ]
    },
    "pages.TheEqualityOperator.steps.equality_vs_assignment.program": {
        "br": [
            "print(1 + 2 = 3)"
        ],
        "en": [
            "print(1 + 2 = 3)"
        ],
        "es": [
            "print(1 + 2 = 3)"
        ],
        "fr": [
            "print(1 + 2 = 3)"
        ],
        "ta": [
            "\u0b85\u0b9a\u0bcd\u0b9a\u0bc1 (1 + 2 = 3)"
        ]
    }
}